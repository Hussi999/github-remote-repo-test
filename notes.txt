Wie starte ich git?
- öffne den Ordner in VS-Code.
- gehe oberhalb rechts in der Leiste auf Terminal und wähle "new Terminal" an.
- im Terminal selbst gehe auf das + und wähle "Command Prompt" an.
- schreibe dort "git init" rein.

Mit "git Status" können wir rausfinden wie der Status unseres Codes aussieht.

Mit "git add ..." können wir unsere Datei zu ordenen.
- mit "git add ." werden alle unzugeordneten Dateien zugeordnet

Mit git commit -m "... added" um die änderungen im Code abzuspeichern.
- Wenn ein M an der Datei auftaucht ist diese Modified und wird von Git überwacht
- Wenn man dann nochmal git add benutzt wird dieses auf den Status übertragen

Man kann git auch im Ordner Menü anpassen und Modifizieren
- Gehe auf der ganz Linken Seite auf das dritte Symbol von oben
- Dann hast du Links in "Changes" zwei Möglichkeiten 
        einmal gibt es den Berreich "Changes" und den Berreich "Staged Changes"
        wenn du jetzt in dem Berreich "Changes" auf das + Zeichen am Text drückst wird dieses 
        direkt ohne Terminal abgespeichert

Es gibt in dem Berreich ein Message Feld wo man Nachrichten für andere Projekt 
Mitarbeiter abspeichern kann.

In Graphs sieht man dann welche änderungen Gemacht wurden.

Wie lade ich meinen Code auf GitHub hoch?
- zu erst müssen wir in GitHub eine neue prosperity erstellen
- dort finden wir dann auch gleich die verschiedenen Befehle die wir brauchen um die Daten von VS-Code hoch zu puschen
- diese werden dann einfach in der VS-Code datei im Terminal eingegeben und gespeichert
- dafür müssen wir aber einen persönlichen Token erstellen.

Personal Token
- Um einen persönlichen Token zu erstellen müssen wir zuerst in den GitHub Browser
- Dort klicken wir rechts oben auf unser Profilbild
- ziemlich weit unten gibt es einen "Settings" Button den wir drücken müssen
- In diesen Menü auf der linken Seite ganz unten können wir auf Developer einstellungen gehen
- Dort gibt es dann die Option einen  Token zu erstellen.



Es gibt drei Arten um in Git Commits anzupassen

- git reset --hard HEAD~1

Löscht das letzte erstellte commit plus alles was gespeichert und nicht Commited wurde

- git reset --mixed HEAD~1

Löscht nur den Commit aber das gespeicherte nicht

- git reset --soft HEAD~1

gibt dir die Möglichkeit den Commit nochmal anzupassen